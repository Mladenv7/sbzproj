package com.sbz;

import com.sbz.proj.model.*;

global java.util.logging.Logger LOGGER

rule "FOUR_OF_A_KIND_1_2_3_4"
    lock-on-active true
    when
        $possibility: Possibility(
            pokerHand == PokerHand.UNKNOWN,
            card1.rank == card2.rank,
            card2.rank == card3.rank,
            card3.rank == card4.rank,
            sameSuit() == false,
            $pokerHand: pokerHand
        )
    then
        modify($possibility){pokerHand = PokerHand.FOUR_OF_A_KIND}
        LOGGER.info("CARDS: " + $possibility.getCards().toString());
end

rule "FOUR_OF_A_KIND_2_3_4_5"
    lock-on-active true
    when
        $possibility: Possibility(
            pokerHand == PokerHand.UNKNOWN,
            card2.rank == card3.rank,
            card3.rank == card4.rank,
            card4.rank == card5.rank,
            sameSuit() == false,
            $pokerHand: pokerHand
        )
    then
        modify($possibility){pokerHand = PokerHand.FOUR_OF_A_KIND}
end

rule "TWO_PAIRS_1_3"
    lock-on-active true
    when
        $possibility: Possibility(
            pokerHand == PokerHand.UNKNOWN,
            card1.rank == card2.rank,
            card3.rank == card4.rank,
            sameSuit() == false,
            $pokerHand: pokerHand,
            $pokerHand != PokerHand.THREE_OF_A_KIND,
            $pokerHand != PokerHand.FOUR_OF_A_KIND
        )
    then
        modify($possibility){
            pokerHand = PokerHand.TWO_PAIRS,
            additionalInfo.put("pair1-index", 0),
            additionalInfo.put("pair2-index", 2),
            additionalInfo.put("kicker-index", 4)
        }
end

rule "TWO_PAIRS_1_4"
    lock-on-active true
    when
        $possibility: Possibility(
            pokerHand == PokerHand.UNKNOWN,
            card1.rank == card2.rank,
            card4.rank == card5.rank,
            sameSuit() == false,
            $pokerHand: pokerHand,
            $pokerHand != PokerHand.THREE_OF_A_KIND,
            $pokerHand != PokerHand.FOUR_OF_A_KIND
        )
    then
        modify($possibility){
            pokerHand = PokerHand.TWO_PAIRS,
            additionalInfo.put("pair1-index", 0),
            additionalInfo.put("kicker-index", 2),
            additionalInfo.put("pair2-index", 3)
        }
end

rule "TWO_PAIRS_2_4"
    lock-on-active true
    when
        $possibility: Possibility(
            pokerHand == PokerHand.UNKNOWN,
            card2.rank == card3.rank,
            card4.rank == card5.rank,
            sameSuit() == false,
            $pokerHand: pokerHand,
            $pokerHand != PokerHand.THREE_OF_A_KIND,
            $pokerHand != PokerHand.FOUR_OF_A_KIND
        )
    then
        modify($possibility){
            pokerHand = PokerHand.TWO_PAIRS,
            additionalInfo.put("kicker-index", 0),
            additionalInfo.put("pair1-index", 1),
            additionalInfo.put("pair2-index", 3)
        }
end

rule "THREE_OF_A_KIND_1_2_3"
    lock-on-active true
    when
        $possibility: Possibility(
            pokerHand == PokerHand.UNKNOWN,
            card1.rank == card2.rank,
            card2.rank == card3.rank,
            sameSuit() == false,
            $pokerHand: pokerHand
        )
    then
        modify($possibility){
            pokerHand = PokerHand.THREE_OF_A_KIND,
            additionalInfo.put("trips-index", 0)
        }
end

rule "THREE_OF_A_KIND_2_3_4"
    lock-on-active true
    when
        $possibility: Possibility(
            pokerHand == PokerHand.UNKNOWN,
            card2.rank == card3.rank,
            card3.rank == card4.rank,
            sameSuit() == false,
            $pokerHand: pokerHand
        )
    then
        modify($possibility){
            pokerHand = PokerHand.THREE_OF_A_KIND,
            additionalInfo.put("trips-index", 1)
        }
end

rule "THREE_OF_A_KIND_3_4_5"
    lock-on-active true
    when
        $possibility: Possibility(
            pokerHand == PokerHand.UNKNOWN,
            card3.rank == card4.rank,
            card4.rank == card5.rank,
            sameSuit() == false,
            $pokerHand: pokerHand
        )
    then
        modify($possibility){
            pokerHand = PokerHand.THREE_OF_A_KIND,
            additionalInfo.put("trips-index", 2)
        }
end

rule "PAIR_1_2"
    lock-on-active true
    when
        $possibility: Possibility(
            pokerHand == PokerHand.UNKNOWN,
            card1.rank == card2.rank,
            howManyWithRank(card1.rank) == 2,
            !sameSuit(),
            $pokerHand: pokerHand
        )
    then
        modify($possibility){
            pokerHand = PokerHand.PAIR,
            additionalInfo.put("pair-index", 0)
        }
end

rule "PAIR_2_3"
    lock-on-active true
    when
        $possibility: Possibility(
            pokerHand == PokerHand.UNKNOWN,
            card2.rank == card3.rank,
            howManyWithRank(card2.rank) == 2,
            !sameSuit(),
            $pokerHand: pokerHand
        )
    then
        modify($possibility){
            pokerHand = PokerHand.PAIR,
            additionalInfo.put("pair-index", 1)
        }
end

rule "PAIR_3_4"
    no-loop
    when
        $possibility: Possibility(
            pokerHand == PokerHand.UNKNOWN,
            card3.rank == card4.rank,
            howManyWithRank(card3.rank) == 2,
            !sameSuit(),
            $pokerHand: pokerHand
        )
    then
        modify($possibility){
            pokerHand = PokerHand.PAIR,
            additionalInfo.put("pair-index", 2)
        }
end

rule "PAIR_4_5"
    no-loop
    when
        $possibility: Possibility(
            pokerHand == PokerHand.UNKNOWN,
            card4.rank == card5.rank,
            howManyWithRank(card4.rank) == 2,
            !sameSuit(),
            $pokerHand: pokerHand
        )
    then
        modify($possibility){
            pokerHand = PokerHand.PAIR,
            additionalInfo.put("pair-index", 3)
        }
end