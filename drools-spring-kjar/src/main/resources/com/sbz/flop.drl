package com.sbz;

import com.sbz.proj.model.*;

global java.util.logging.Logger LOGGER

rule "Raise when you have royal flush"
    lock-on-active true
    agenda-group "flop"
	when
        $state: TableState(
            $players: players,
            $player: players.get(0),
            $player.getAction().get(0) == Action.NONE
        )
        $possibility: Possibility(
            $pokerHand: pokerHand == PokerHand.ROYAL_FLUSH
        )
    then
        modify($state){
            getPlayers().get(0).getAction().set(0, Action.RAISE);
        }
end

rule "Raise when you have good combination"
    lock-on-active true
    agenda-group "flop"
	when
        $state: TableState(
            $players: players,
            $player: players.get(0),
            $player.getAction().get(0) == Action.NONE
        )
        $possibility: Possibility(
            pokerHand != PokerHand.ROYAL_FLUSH,
            $pokerHand: pokerHand,
            pokerHand.strength >= 5
        )
    then
        modify($state){
            getPlayers().get(0).getAction().set(0, Action.RAISE);
        }
        LOGGER.info("You have " + $pokerHand.name());
end

rule "Call when you have ok combination"
    lock-on-active true
    agenda-group "flop"
	when
        $state: TableState(
            $players: players,
            $player: players.get(0),
            $player.getAction().get(0) == Action.NONE
        )
        $possibility: Possibility(
            $pokerHand: pokerHand,
            pokerHand.strength < 5,
            pokerHand.strength > 1
        )
        Player(getAction().get(0) == Action.RAISE || getAction().get(0) == Action.BET) from $players
        accumulate( Player($pot : getMoney()) from $players, $maxMoney : max($pot))
        Player(moneyRatio($maxMoney) <= 2) from $player
    then
        modify($state){
            getPlayers().get(0).getAction().set(0, Action.CALL);
        }
        LOGGER.info("You have " + $pokerHand.name());
        LOGGER.info("You should call to "+ $maxMoney);
end

rule "Call when you have only strong pocket pair"
    lock-on-active true
    agenda-group "flop"
	when
        $state: TableState(
            $players: players,
            $player: players.get(0),
            $player.getAction().get(0) == Action.NONE,
            $player.getCard1().rank.rank == $player.getCard2().rank.rank,
            $player.getCard1().rank.rank + $player.getCard2().rank.rank >= 18
        )
        $possibility: Possibility(
            $pokerHand: pokerHand,
            pokerHand == PokerHand.PAIR
        )
        Player(getAction().get(0) == Action.RAISE || getAction().get(0) == Action.BET) from $players
        accumulate( Player($pot : getMoney()) from $players, $maxMoney : max($pot))
        Player(moneyRatio($maxMoney) <= 2) from $player
    then
        modify($state){
            getPlayers().get(0).getAction().set(0, Action.CALL);
        }
        LOGGER.info("You have " + $pokerHand.name());
        LOGGER.info("You should call to "+ $maxMoney);
end

rule "Call when you have only weak pocket pair and someone's pot is not 2 times bigger than yours"
    lock-on-active true
    agenda-group "flop"
	when
        $state: TableState(
            $players: players,
            $player: players.get(0),
            $player.getAction().get(0) == Action.NONE,
            $player.getCard1().rank.rank == $player.getCard2().rank.rank
        )
        $possibility: Possibility(
            $pokerHand: pokerHand,
            pokerHand == PokerHand.PAIR
        )
        Player(getAction().get(0) == Action.RAISE || getAction().get(0) == Action.BET) from $players
        accumulate( Player($pot : getMoney()) from $players, $maxMoney : max($pot))
        Player(moneyRatio($maxMoney) <= 2) from $player
    then
        modify($state){
            getPlayers().get(0).getAction().set(0, Action.CALL);
        }
        LOGGER.info("You have " + $pokerHand.name());
        LOGGER.info("You should call to "+ $maxMoney);
end

rule "Call when you have nothing and someone's pot is not 2 times bigger than yours"
    lock-on-active true
    agenda-group "flop"
	when
        $state: TableState(
            $players: players,
            $player: players.get(0),
            players.get(0).getCard1().rank.rank >= 12 || players.get(0).getCard2().rank.rank >= 12,
            $player.getAction().get(0) == Action.NONE
        )
        $possibility: Possibility(
            $pokerHand: pokerHand,
            pokerHand.strength <= 1
        )
        Player(getAction().get(0) == Action.RAISE || getAction().get(0) == Action.BET) from $players
        accumulate( Player($pot : getMoney()) from $players, $maxMoney : max($pot))
        Player(moneyRatio($maxMoney) <= 2) from $player
    then
        modify($state){
            getPlayers().get(0).getAction().set(0, Action.CALL);
        }
        LOGGER.info("You have " + $pokerHand.name());
        LOGGER.info("You should call to "+ $maxMoney);
end

rule "Fold when you have nothing"
    agenda-group "flop"
	when
        $state: TableState(
            $players: players,
            $player: players.get(0),
            $player.getAction().get(0) == Action.NONE
        )
        $possibility: Possibility(
            $pokerHand: pokerHand
        )
    then
        modify($state){
            getPlayers().get(0).getAction().set(0, Action.FOLD);
        }
        LOGGER.info("You have " + $pokerHand.name());
end

rule "I activate always"
    agenda-group "flop"
    when
        $state: TableState($players: players,
           $player: players.get(0),
           $player.getAction().get(0) == Action.NONE
        )
    then
        System.out.println("Hello");
end